When would you want to create a remote repository rather than keeping all your work local?

    When you want to allow others to access your repository and suggest changes to it.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

    Because you may not necessarily want all changes in the remote repository
    to be reflected in your local files.

Describe the differences between forks, clones, and branches. When would you use one instead of another?

    A fork is just a clone that GitHub makes for you on their own machines.
    A clone is a duplicate repository that you can make locally on your own
    machine (from GitHub or from your own machine).  A branch is an alternate
    version existing within a single repository.

What is the benefit of having a copy of the last known state of the remote stored locally?

    Git fetch can be used to update just the local copy of the remote branch
    (origin/master) while leaving your actual local version alone.  You can
    then use git log and git diff to see what changes were introduced on the
    remote.  This can be helpful when working offline.  You can then use git
    merge on the local to update it for changes on the remote.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

    To collaborate without Git or GitHub, you would need to be extremely diligent
    in keeping track of changes you were making, and you would need to send files
    back and forth to collaborators.  It would create a lot of work to do this,
    and to integrate different versions of the code.  However, you would not
    need to invest the time to learn how Git and GitHub work.